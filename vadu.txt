local Rep = game:GetService("ReplicatedStorage")


local plrs = game:GetService("Players")
local plr = plrs.LocalPlayer

local aimbot = false
local seedbuy = "Carrot"
local gearbuy = "Basic Sprinkler"
local sheckles = 100


local function getClosestPlayer()
	local closestPlayer = nil
	local shortestDistance = math.huge

	local localCharacter = plr.Character
	if not localCharacter then
		return nil
	end

	local localHumanoidRootPart = localCharacter:FindFirstChild("HumanoidRootPart")
	if not localHumanoidRootPart then
		return nil
	end

	local localPosition = localHumanoidRootPart.Position

	for _, player in pairs(plrs:GetPlayers()) do

		if player == plr then
			continue
		end

		local character = player.Character

		if character and character:FindFirstChild("HumanoidRootPart") then
			local otherHumanoidRootPart = character.HumanoidRootPart
			local otherPosition = otherHumanoidRootPart.Position

			local distance = (localPosition - otherPosition).Magnitude

			if distance < shortestDistance then
				shortestDistance = distance
				closestPlayer = player
			end
		end
	end

	return closestPlayer, shortestDistance
end

local function getHeldItem()
	if plr.Character then

		for _, child in ipairs(plr.Character:GetChildren()) do
			if child:IsA("Tool") then
				return child
			end
		end
	end
	return nil
end






local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
Rayfield:Notify({
	Title = "Hello!",
	Content = "Thanks For Using Vadu Hub!",
	Duration = 6.5,
	Image = 4483362458,
})
local Window = Rayfield:CreateWindow({
	Name = "Vadu Hub",
	Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
	LoadingTitle = "Vadu Hub",
	LoadingSubtitle = "V4 by Vadu",
	ShowText = "Rayfield", -- for mobile users to unhide rayfield, change if you'd like
	Theme = "AmberBloom", -- Check https://docs.sirius.menu/rayfield/configuration/themes

	ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

	DisableRayfieldPrompts = false,
	DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

	ConfigurationSaving = {
		Enabled = false,
		FolderName = nil, -- Create a custom folder for your hub/game
		FileName = "Big Hub"
	},

	Discord = {
		Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
		Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
		RememberJoins = true -- Set this to false to make them join the discord every time they load it up
	},

	KeySystem = true, -- Set this to true to use our key system
	KeySettings = {
		Title = "V3",
		Subtitle = "Key System",
		Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
		FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
		SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
		GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
		Key = {"vadupaloasdsidks732"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
	}
})

if game.PlaceId == 126884695634066 then
	local Events = Rep:WaitForChild("GameEvents")
	local Tab = Window:CreateTab("Grow A Garden", "activity-square")

	local Section = Tab:CreateSection("Buying")

	local QuickSeedBuyInput = Tab:CreateInput({
		Name = "Quick Seed Buy",
		CurrentValue = "",
		PlaceholderText = "Carrot",
		RemoveTextAfterFocusLost = false,
		Flag = "Input1",
		Callback = function(Text)
			seedbuy = Text
		end,
	})

	local SeedBuyToggle = Tab:CreateToggle({

		Name = "Seed Buy",
		CurrentValue = false,
		Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
		Callback = function(Value)
			while Value == true do
				Events:WaitForChild("BuySeedStock"):FireServer(seedbuy)
			end
		end,
	})

	local QuickSeedBuyButton = Tab:CreateButton({
		Name = "Quick Seed Buy",
		Callback = function()
			Events:WaitForChild("BuySeedStock"):FireServer(seedbuy)
		end,
	})

	local QuickGearBuyInput = Tab:CreateInput({
		Name = "Quick Gear Buy",
		CurrentValue = "",
		PlaceholderText = "Basic Sprinkler",
		RemoveTextAfterFocusLost = false,
		Flag = "Input1",
		Callback = function(Text)
			gearbuy = Text
		end,
	})

	local QuickGearBuyButton = Tab:CreateButton({
		Name = "Quick Gear Buy",
		Callback = function()
			Events:WaitForChild("BuyGearStock"):FireServer(gearbuy)
		end,
	})

	local Section = Tab:CreateSection("Selling")

	local QuickInventorySellButton = Tab:CreateButton({
		Name = "Quick Inventory Sell",
		Callback = function()
			Events:WaitForChild("Sell_Inventory"):FireServer()
		end,
	})

	local QuickItemSellButton = Tab:CreateButton({
		Name = "Quick Item Sell",
		Callback = function()
			Events:WaitForChild("Sell_Item"):FireServer()
		end,
	})

	local QuickPetSellButton = Tab:CreateButton({
		Name = "Quick Pet Sell",
		Callback = function()
			Events:WaitForChild("SellPet_RE"):FireServer()
		end,
	})

	local Section = Tab:CreateSection("Experimental")

	local BuyCandyBlossomButton = Tab:CreateButton({
		Name = "Buy Candy Blossom",
		Callback = function()
			Events:WaitForChild("BuyEasterStock"):FireServer("Candy Blossom")
		end,
	})

	local GiveTenChiButton = Tab:CreateButton({
		Name = "Give 10 Chi",
		Callback = function()
			Events:WaitForChild("ChannelChi"):FireServer(10)
		end,
	})

	local ShecklesGiveInput = Tab:CreateInput({
		Name = "Sheckles",
		CurrentValue = "",
		PlaceholderText = "100",
		RemoveTextAfterFocusLost = false,
		Flag = "Input1",
		Callback = function(Text)
			sheckles = Text
		end,
	})

	local GiveShecklesButton = Tab:CreateButton({
		Name = "Give Sheckles",
		Callback = function()
			plr:WaitForChild("leaderstats"):WaitForChild("Sheckles").Value = sheckles
			plr:WaitForChild("PlayerGui"):WaitForChild("Sheckles_UI"):WaitForChild("TextLabel"):WaitForChild("val").Value = sheckles
		end,
	})

	local DupeButton = Tab:CreateButton({
		Name = "Dupe",
		Callback = function()
			local held = getHeldItem()
			if held.Name:lower():find("seed") ~= nil then
				held:SetAttribute("Quantity", held:GetAttribute("Quantity") + 1)
				held.Name = held:GetAttribute("Seed") + " X" + held:GetAttribute("Quantity")
			else
				local neww = held:Clone()
				neww.Parent = plr.Backpack


			end

		end,
	})
end

local Tab2 = Window:CreateTab("Home", "home")
local UpdateButton = Tab2:CreateButton({
	Name = "Update Script",
	Callback = function()
		loadstring(game:HttpGet('https://raw.githubusercontent.com/ronaldomgfan/vaduhub/refs/heads/main/vadu.txt'))()
		Rayfield:Destroy()
	end,
})

local function EnableESP() 
	local plrss = game.Players:GetPlayers()
	for _, i in plrss do
		if i.Character:WaitForChild("Highlight") == nil then
			local highlight = Instance.new("Highlight")
			highlight.Name = "Highlight"
			highlight.Parent = i.Character
			highlight.FillColor = i.TeamColor
		end
	end

end

local function DisableESP() 
	local plrss = game.Players:GetPlayers()
	for _, i in plrss do
		if i.Character:WaitForChild("Highlight") == nil then
			
		else
			i.Character:WaitForChild("Highlight"):Destroy()
			
		end
	end

end


local function ESP(value: boolean)
	if value == true then
		EnableESP()
	else
		DisableESP()
	end
end





local  infiniteYield = Tab2:CreateButton({
	Name = "Infinite Yield",
	Callback = function()
		loadstring(game:HttpGet('https://raw.githubusercontent.com/DarkNetworks/Infinite-Yield/main/latest.lua'))()
	end,
})
local test = Tab2:CreateButton({
	Name = "Close",
	Callback = function()
		Rayfield:Destroy()
	end,
})





local Tab3 = Rayfield:CreateTab("Arsenal","bone")
local ESPToggle = Tab3:CreateToggle({
	Name = "ESP",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
		ESP(Value)
		
		
		-- The function that takes place when the toggle is pressed
		-- The variable (Value) is a boolean on whether the toggle is true or false
	end,
})
